// Generated by Dagger (https://dagger.dev).
package com.laioffer.spotify.player;

import android.content.Context;
import com.google.android.exoplayer2.ExoPlayer;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PlayerModule_ProvidesPlayerFactory implements Factory<ExoPlayer> {
  private final Provider<Context> contextProvider;

  public PlayerModule_ProvidesPlayerFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public ExoPlayer get() {
    return providesPlayer(contextProvider.get());
  }

  public static PlayerModule_ProvidesPlayerFactory create(Provider<Context> contextProvider) {
    return new PlayerModule_ProvidesPlayerFactory(contextProvider);
  }

  public static ExoPlayer providesPlayer(Context context) {
    return Preconditions.checkNotNullFromProvides(PlayerModule.INSTANCE.providesPlayer(context));
  }
}
