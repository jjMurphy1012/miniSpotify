// Generated by Dagger (https://dagger.dev).
package com.laioffer.spotify.database;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideDatabaseDaoFactory implements Factory<DatabaseDao> {
  private final Provider<AppDatabase> databaseProvider;

  public DatabaseModule_ProvideDatabaseDaoFactory(Provider<AppDatabase> databaseProvider) {
    this.databaseProvider = databaseProvider;
  }

  @Override
  public DatabaseDao get() {
    return provideDatabaseDao(databaseProvider.get());
  }

  public static DatabaseModule_ProvideDatabaseDaoFactory create(
      Provider<AppDatabase> databaseProvider) {
    return new DatabaseModule_ProvideDatabaseDaoFactory(databaseProvider);
  }

  public static DatabaseDao provideDatabaseDao(AppDatabase database) {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.provideDatabaseDao(database));
  }
}
