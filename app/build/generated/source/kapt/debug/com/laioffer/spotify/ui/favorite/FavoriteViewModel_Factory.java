// Generated by Dagger (https://dagger.dev).
package com.laioffer.spotify.ui.favorite;

import com.laioffer.spotify.repository.FavoriteAlbumRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FavoriteViewModel_Factory implements Factory<FavoriteViewModel> {
  private final Provider<FavoriteAlbumRepository> favoriteAlbumRepositoryProvider;

  public FavoriteViewModel_Factory(
      Provider<FavoriteAlbumRepository> favoriteAlbumRepositoryProvider) {
    this.favoriteAlbumRepositoryProvider = favoriteAlbumRepositoryProvider;
  }

  @Override
  public FavoriteViewModel get() {
    return newInstance(favoriteAlbumRepositoryProvider.get());
  }

  public static FavoriteViewModel_Factory create(
      Provider<FavoriteAlbumRepository> favoriteAlbumRepositoryProvider) {
    return new FavoriteViewModel_Factory(favoriteAlbumRepositoryProvider);
  }

  public static FavoriteViewModel newInstance(FavoriteAlbumRepository favoriteAlbumRepository) {
    return new FavoriteViewModel(favoriteAlbumRepository);
  }
}
