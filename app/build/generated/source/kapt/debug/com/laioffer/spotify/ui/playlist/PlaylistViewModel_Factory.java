// Generated by Dagger (https://dagger.dev).
package com.laioffer.spotify.ui.playlist;

import com.laioffer.spotify.repository.FavoriteAlbumRepository;
import com.laioffer.spotify.repository.PlaylistRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PlaylistViewModel_Factory implements Factory<PlaylistViewModel> {
  private final Provider<PlaylistRepository> playlistRepositoryProvider;

  private final Provider<FavoriteAlbumRepository> favoriteAlbumRepositoryProvider;

  public PlaylistViewModel_Factory(Provider<PlaylistRepository> playlistRepositoryProvider,
      Provider<FavoriteAlbumRepository> favoriteAlbumRepositoryProvider) {
    this.playlistRepositoryProvider = playlistRepositoryProvider;
    this.favoriteAlbumRepositoryProvider = favoriteAlbumRepositoryProvider;
  }

  @Override
  public PlaylistViewModel get() {
    return newInstance(playlistRepositoryProvider.get(), favoriteAlbumRepositoryProvider.get());
  }

  public static PlaylistViewModel_Factory create(
      Provider<PlaylistRepository> playlistRepositoryProvider,
      Provider<FavoriteAlbumRepository> favoriteAlbumRepositoryProvider) {
    return new PlaylistViewModel_Factory(playlistRepositoryProvider, favoriteAlbumRepositoryProvider);
  }

  public static PlaylistViewModel newInstance(PlaylistRepository playlistRepository,
      FavoriteAlbumRepository favoriteAlbumRepository) {
    return new PlaylistViewModel(playlistRepository, favoriteAlbumRepository);
  }
}
