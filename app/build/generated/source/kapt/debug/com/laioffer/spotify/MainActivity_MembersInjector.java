// Generated by Dagger (https://dagger.dev).
package com.laioffer.spotify;

import com.laioffer.spotify.database.DatabaseDao;
import com.laioffer.spotify.network.NetworkApi;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<NetworkApi> apiProvider;

  private final Provider<DatabaseDao> databaseDaoProvider;

  public MainActivity_MembersInjector(Provider<NetworkApi> apiProvider,
      Provider<DatabaseDao> databaseDaoProvider) {
    this.apiProvider = apiProvider;
    this.databaseDaoProvider = databaseDaoProvider;
  }

  public static MembersInjector<MainActivity> create(Provider<NetworkApi> apiProvider,
      Provider<DatabaseDao> databaseDaoProvider) {
    return new MainActivity_MembersInjector(apiProvider, databaseDaoProvider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    injectApi(instance, apiProvider.get());
    injectDatabaseDao(instance, databaseDaoProvider.get());
  }

  @InjectedFieldSignature("com.laioffer.spotify.MainActivity.api")
  public static void injectApi(MainActivity instance, NetworkApi api) {
    instance.api = api;
  }

  @InjectedFieldSignature("com.laioffer.spotify.MainActivity.databaseDao")
  public static void injectDatabaseDao(MainActivity instance, DatabaseDao databaseDao) {
    instance.databaseDao = databaseDao;
  }
}
